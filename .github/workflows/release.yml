#*********************************************************************
# Copyright (c) Intel Corporation 2023
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

# This workflow will release new versions when required using semantic-release

name: Semantic-Release CI

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  release:
    permissions:
      contents: write # for Git to git push
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          persist-credentials: false
      - name: Use Node.js 20.x
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run compile
      - name: Docker Login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: vprodemo.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: true
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@b1b432f13acb7768e0c8efdec416d363a57546f2 # v4.1.1
        with:
          semantic_version:
            19.0.5 # It is recommended to specify a version range
            # for semantic-release when using
            # semantic-release-action lower than @v3
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.ROSIE_TOKEN }}

      - name: Get Next Version
        id: version
        run: |
          if [ -f .nextVersion ]; then
            echo "next=$(cat .nextVersion)" >> "$GITHUB_OUTPUT"
          else
            echo "next=none" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        if: ${{ steps.version.outputs.next != 'none' }}
        with:
          repository: open-amt-cloud-toolkit/e2e-testing
          ref: docker-release
          clean: true
          token: ${{ secrets.ROSIE_TOKEN }}

      - name: Create docker-release @ ${{ steps.version.outputs.next }}
        if: ${{ steps.version.outputs.next != 'none' }}
        env:
          RELEASE_YAML: release/rps.yml
          NEXT_VERSION: ${{ steps.version.outputs.next }}
        run: |
          echo "Releasing ${{ github.repository }}@$NEXT_VERSION"
          if [ "$NEXT_VERSION" != "" ]; then
            CURRENT_VERSION=$(sed -nre 's/(.*):v[0-9]*(([0-9]+\\.)*[0-9]+).*/v\\2/p' $RELEASE_YAML)
            sed -i "s/$CURRENT_VERSION/$NEXT_VERSION/g" $RELEASE_YAML
            echo "========================="
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git status
            git add .
            git commit -m "release(rps): automated release of $NEXT_VERSION @ ${GITHUB_SHA::7}"
            git push origin docker-release
          fi
